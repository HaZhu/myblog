<html>
<%- include('../public/user/head.ejs') %>

    <body class="index-page">
        <%- include('../public/user/nav.ejs') %>
            <canvas id="canvas"></canvas>
            <div class="swiperBox">
                <div class="swiper-container">
                    <div class="swiper-wrapper">
                        <div class="swiper-slide" style="background:url('user/images/bannerImg/1.jpg') no-repeat;background-size:100% 100%;"></div>
                        <div class="swiper-slide" style="background:url('user/images/bannerImg/2.png') no-repeat;background-size:100% 100%;"></div>
                        <div class="swiper-slide" style="background:url('user/images/bannerImg/3.jpg') no-repeat;background-size:100% 100%;"></div>
                        <div class="swiper-slide" style="background:url('user/images/bannerImg/4.jpg') no-repeat;background-size:100% 100%;"></div>
                        <div class="swiper-slide" style="background:url('user/images/bannerImg/5.jpg') no-repeat;background-size:100% 100%;"></div>
                        <div class="swiper-slide" style="background:url('user/images/bannerImg/6.jpg') no-repeat;background-size:100% 100%;"></div>
                        <div class="swiper-slide" style="background:url('user/images/bannerImg/7.jpg') no-repeat;background-size:100% 100%;"></div>
                        <div class="swiper-slide" style="background:url('user/images/bannerImg/8.jpg') no-repeat;background-size:100% 100%;"></div>
                        <div class="swiper-slide" style="background:url('user/images/bannerImg/9.jpg') no-repeat;background-size:100% 100%;"></div>
                        <div class="swiper-slide" style="background:url('user/images/bannerImg/10.jpg') no-repeat;background-size:100% 100%;"></div>
                    </div>
                </div>
            </div>
            <div class="titleBox wall-of-buttons" style="top:860px;"><a class="large green  button" id="jxblok"><span></span></a></div>
            <div id="page-content">
                <section class="box-content box-1">
                    <div class="container">
                        <div class="row">
                            <div class="col-md-4">
                                <div class="box-item">
                                    <img src="<%=dataOne[0].blogImg%>" class="img-responsive" />
                                    <div class="content">
                                        <h3><%=dataOne[0].blogName%></h3>
                                        <p><%=dataOne[0].blogContent%></p>
                                        <a href="/single:<%=dataOne[0].id%>">Read More...</a>
                                        <br>
                                        <br>
                                        <span>发布时间：<%=dataOne[0].blogTime%></span>
                                        <br>
                                    </div>
                                </div>
                            </div>
                            <div class="col-md-4">
                                <div class="box-item">
                                    <img src="<%=dataTwo[0].blogImg%>" class="img-responsive" />
                                    <div class="content">
                                        <h3><%=dataTwo[0].blogName%></h3>
                                        <p><%=dataTwo[0].blogContent%></p>
                                        <a href="/single:<%=dataTwo[0].id%>">Read More...</a>
                                        <br>
                                        <br>
                                        <span>发布时间：<%=dataTwo[0].blogTime%></span>
                                        <br>
                                    </div>
                                </div>
                            </div>
                            <div class="col-md-4">
                                <div class="box-item">
                                    <img src="<%=dataThree[0].blogImg%>" class="img-responsive" />
                                    <div class="content">
                                        <h3><%=dataThree[0].blogName%></h3>
                                        <p><%=dataThree[0].blogContent%></p>
                                        <a href="/single:<%=dataThree[0].id%>">Read More...</a>
                                        <br>
                                        <br>
                                        <span>发布时间：<%=dataOne[0].blogTime%></span>
                                        <br>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </section>
            </div>
            <div class="titleBox wall-of-buttons" style="top:1640px;"><a class="large orange  button" id="animate"><span>canvas</span></a></div>
            <div class="canvasShowBox">
                <div class="flipster">
                    <ul>
                        <li>
                            <a href="/box" class="Button Block" target="_blank">
                                <img src="user/images/canvas/ball.jpg" alt="">
                            </a>
                        </li>
                        <li>
                            <a href="/heart" class="Button Block" target="_blank">
                                <img src="user/images/canvas/heart.png" alt="">
                            </a>
                        </li>
                        <li>
                            <a href="/huli" class="Button Block" target="_blank">
                                <img src="user/images/canvas/pokemon.png" alt="">
                            </a>
                        </li>
                        <li>
                            <a href="/sticky" class="Button Block" target="_blank">
                                <img src="user/images/canvas/sticky.jpg" alt="">
                            </a>
                        </li>
                        <li>
                            <a href="/whale" class="Button Block" target="_blank">
                                <img src="user/images/canvas/whale.jpg" alt="">
                            </a>
                        </li>
                    </ul>
                </div>
            </div>
            <%- include('../public/user/footer.ejs') %>
    </body>

</html>
<script>
    function titleFn(obj){
    $("#jxblok").animate({
        width:'1140px'
    }, 'linear',function(){
        $("#jxblok span").html('');
        var arr=['精','选','博','客'];
        var i=0;
        var timer;
        clearInterval(timer);
        timer = setInterval(function(){
            if(i<=arr.length-1){
                $("#jxblok span").append(arr[i]);
                i++;
            }else{
                clearInterval(timer);
                $("#jxblok span").css('display','inline-block');
                $("#jxblok span").css( 'transform','rotateZ(45deg)');
                $("#jxblok span").animate({
                    marginLeft:'1000px'
                },3000,function(){
                    $("#jxblok").css('opacity',1);
                    $("#jxblok span").css('transform','rotateZ(0deg)');
                    var timer2;
                    clearTimeout(timer2);
                    timer2=setTimeout(function(){
                        $("#jxblok span").css('transform','rotateZ(-45deg)');
                        $("#jxblok span").animate({
                            marginLeft:'40px'
                        },3000,function(){
                             $("#jxblok span").css('transform','rotateZ(0deg)');
                            $("#jxblok").css('opacity',0.4);
                            $("#jxblok").animate({width:'170px'},'linear',function(){
                                var timer3;
                                clearTimeout(timer3);
                                timer3=setTimeout(function(){titleFn();},1000)
                            })
                        })
                    },1000)            
                })
            }
        },500)
        
      });
    }
    titleFn();
//-----------------------------------------------------  
    function animateFn(){
        var i=90;
        var timer4;
        clearInterval(timer4);
        timer4 = setInterval(function(){
            if(i>=1800){
                clearInterval(timer4);
                $("#animate").animate({
                    width:'1140px',
                    opacity:1
                }, 'linear',function(){
                    setTimeout(function(){
                        $('#animate').css('transform','rotateZ(0deg)');
                           setTimeout(function(){
                                $('#animate').css('transform','rotateZ(5deg)');
                               $("#animate span").animate({
                                        marginLeft:'1000px'
                                    },3000,function(){
                                   $('#animate').css('transform','rotateZ(0deg)');
                                   setTimeout(function(){
                                       $('#animate').css('transform','rotateZ(-5deg)');
                                       $("#animate span").animate({
                                            marginLeft:'40px'
                                            },3000,function(){
                                                $('#animate').css({'transform':'rotateZ(0deg)','opacity':'0.4'});
                                                setTimeout(function(){
                                                    $("#animate").animate({
                                                            width:'165px',
                                                            opacity:1
                                                        }, 'linear',function(){
                                                        setTimeout(function(){
                                                           animateFn() 
                                                        },1000)
                                                    })
                                                },1000)
                                            })
                                   },1000)
                               })
                            },1000)                 
                    },1000)
                     
                })
            }
            $('#animate').css('transform','rotateZ('+i+'deg)');
            i+=90
        },50)
    }
    animateFn()
    
//-----------------------------------------------------     
//弹窗    
//    if(localStorage.userName==""){
//           layer.open({
//            type: 2,
//            title: false,
//            content: ['/login', 'no'],
//            area: ['800px', '600px'],
//            anim: 3,
//            offset: '120px'
//        })
//    }
//-----------------------------------------------------      
    $('.nav a').eq(0).addClass('active');
    $('.index-page #page-content .col-md-4').hover(function () {
        $(this).css('opacity', 1);
    }, function () {
        $(this).css('opacity', 0.4);
    })
    $('.canvasBox').hover(function () {
        $(this).find('.goToBox').slideDown();
    }, function () {
        $(this).find('.goToBox').slideUp();
    })
    $(".flipster").flipster({
        style: 'carousel',
        start: 0
    });
    var swiper = new Swiper('.swiper-container', {
        effect: 'coverflow',
        grabCursor: true,
        centeredSlides: true,
        slidesPerView: 'auto',
        autoplay: 1000,
        autoplayDisableOnInteraction: false,
        coverflow: {
            rotate: 50,
            stretch: 0,
            depth: 100,
            modifier: 1,
            slideShadows: true
        },
        onAutoplay: function (swiper) {
            $('.swiper-slide').css('opacity', 0.4);
            $('.swiper-slide').eq(swiper.activeIndex).css('opacity', 1);
        },
        onTouchEnd: function (swiper) {
            $('.swiper-slide').css('opacity', 0.4);
            $('.swiper-slide').eq(swiper.activeIndex).css('opacity', 1);
        }
    });
//-----------------------------------------------------      
    window.requestAnimFrame = (function () {
        return window.requestAnimationFrame ||
            window.webkitRequestAnimationFrame ||
            window.mozRequestAnimationFrame ||
            function (callback) {
                window.setTimeout(callback, 1000 / 60);
            };
    })();

    // now we will setup our basic variables for the demo
    var canvas = document.getElementById('canvas'),
        ctx = canvas.getContext('2d'),
        // full screen dimensions
        cw = window.innerWidth,
        ch = $('body').outerHeight(true),
        // firework collection
        fireworks = [],
        // particle collection
        particles = [],
        // starting hue
        hue = 120,
        // when launching fireworks with a click, too many get launched at once without a limiter, one launch per 5 loop ticks
        limiterTotal = 5,
        limiterTick = 0,
        // this will time the auto launches of fireworks, one launch per 80 loop ticks
        timerTotal = 80,
        timerTick = 0,
        mousedown = false,
        // mouse x coordinate,
        mx,
        // mouse y coordinate
        my;

    // set canvas dimensions
    canvas.width = cw;
    canvas.height = ch;

    // now we are going to setup our function placeholders for the entire demo

    // get a random number within a range
    function random(min, max) {
        return Math.random() * (max - min) + min;
    }

    // calculate the distance between two points
    function calculateDistance(p1x, p1y, p2x, p2y) {
        var xDistance = p1x - p2x,
            yDistance = p1y - p2y;
        return Math.sqrt(Math.pow(xDistance, 2) + Math.pow(yDistance, 2));
    }

    // create firework
    function Firework(sx, sy, tx, ty) {
        // actual coordinates
        this.x = sx;
        this.y = sy;
        // starting coordinates
        this.sx = sx;
        this.sy = sy;
        // target coordinates
        this.tx = tx;
        this.ty = ty;
        // distance from starting point to target
        this.distanceToTarget = calculateDistance(sx, sy, tx, ty);
        this.distanceTraveled = 0;
        // track the past coordinates of each firework to create a trail effect, increase the coordinate count to create more prominent trails
        this.coordinates = [];
        this.coordinateCount = 3;
        // populate initial coordinate collection with the current coordinates
        while (this.coordinateCount--) {
            this.coordinates.push([this.x, this.y]);
        }
        this.angle = Math.atan2(ty - sy, tx - sx);
        this.speed = 2;
        this.acceleration = 1.05;
        this.brightness = random(50, 70);
        // circle target indicator radius
        this.targetRadius = 1;
    }

    // update firework
    Firework.prototype.update = function (index) {
        // remove last item in coordinates array
        this.coordinates.pop();
        // add current coordinates to the start of the array
        this.coordinates.unshift([this.x, this.y]);

        // cycle the circle target indicator radius
        if (this.targetRadius < 8) {
            this.targetRadius += 0.3;
        } else {
            this.targetRadius = 1;
        }

        // speed up the firework
        this.speed *= this.acceleration;

        // get the current velocities based on angle and speed
        var vx = Math.cos(this.angle) * this.speed,
            vy = Math.sin(this.angle) * this.speed;
        // how far will the firework have traveled with velocities applied?
        this.distanceTraveled = calculateDistance(this.sx, this.sy, this.x + vx, this.y + vy);

        // if the distance traveled, including velocities, is greater than the initial distance to the target, then the target has been reached
        if (this.distanceTraveled >= this.distanceToTarget) {
            createParticles(this.tx, this.ty);
            // remove the firework, use the index passed into the update function to determine which to remove
            fireworks.splice(index, 1);
        } else {
            // target not reached, keep traveling
            this.x += vx;
            this.y += vy;
        }
    }

    // draw firework
    Firework.prototype.draw = function () {
        ctx.beginPath();
        // move to the last tracked coordinate in the set, then draw a line to the current x and y
        ctx.moveTo(this.coordinates[this.coordinates.length - 1][0], this.coordinates[this.coordinates.length - 1][1]);
        ctx.lineTo(this.x, this.y);
        ctx.strokeStyle = 'hsl(' + hue + ', 100%, ' + this.brightness + '%)';
        ctx.stroke();

        ctx.beginPath();
        // draw the target for this firework with a pulsing circle
        ctx.arc(this.tx, this.ty, this.targetRadius, 0, Math.PI * 2);
        ctx.stroke();
    }

    // create particle
    function Particle(x, y) {
        this.x = x;
        this.y = y;
        // track the past coordinates of each particle to create a trail effect, increase the coordinate count to create more prominent trails
        this.coordinates = [];
        this.coordinateCount = 5;
        while (this.coordinateCount--) {
            this.coordinates.push([this.x, this.y]);
        }
        // set a random angle in all possible directions, in radians
        this.angle = random(0, Math.PI * 2);
        this.speed = random(1, 10);
        // friction will slow the particle down
        this.friction = 0.95;
        // gravity will be applied and pull the particle down
        this.gravity = 1;
        // set the hue to a random number +-20 of the overall hue variable
        this.hue = random(hue - 20, hue + 20);
        this.brightness = random(50, 80);
        this.alpha = 1;
        // set how fast the particle fades out
        this.decay = random(0.015, 0.03);
    }

    // update particle
    Particle.prototype.update = function (index) {
        // remove last item in coordinates array
        this.coordinates.pop();
        // add current coordinates to the start of the array
        this.coordinates.unshift([this.x, this.y]);
        // slow down the particle
        this.speed *= this.friction;
        // apply velocity
        this.x += Math.cos(this.angle) * this.speed;
        this.y += Math.sin(this.angle) * this.speed + this.gravity;
        // fade out the particle
        this.alpha -= this.decay;

        // remove the particle once the alpha is low enough, based on the passed in index
        if (this.alpha <= this.decay) {
            particles.splice(index, 1);
        }
    }

    // draw particle
    Particle.prototype.draw = function () {
        ctx.beginPath();
        // move to the last tracked coordinates in the set, then draw a line to the current x and y
        ctx.moveTo(this.coordinates[this.coordinates.length - 1][0], this.coordinates[this.coordinates.length - 1][1]);
        ctx.lineTo(this.x, this.y);
        ctx.strokeStyle = 'hsla(' + this.hue + ', 100%, ' + this.brightness + '%, ' + this.alpha + ')';
        ctx.stroke();
    }

    // create particle group/explosion
    function createParticles(x, y) {
        // increase the particle count for a bigger explosion, beware of the canvas performance hit with the increased particles though
        var particleCount = 30;
        while (particleCount--) {
            particles.push(new Particle(x, y));
        }
    }

    // main demo loop
    function loop() {
        // this function will run endlessly with requestAnimationFrame
        requestAnimFrame(loop);

        // increase the hue to get different colored fireworks over time
        hue += 0.5;

        // normally, clearRect() would be used to clear the canvas
        // we want to create a trailing effect though
        // setting the composite operation to destination-out will allow us to clear the canvas at a specific opacity, rather than wiping it entirely
        ctx.globalCompositeOperation = 'destination-out';
        // decrease the alpha property to create more prominent trails
        ctx.fillStyle = 'rgba(0, 0, 0, 0.5)';
        ctx.fillRect(0, 0, cw, ch);
        // change the composite operation back to our main mode
        // lighter creates bright highlight points as the fireworks and particles overlap each other
        ctx.globalCompositeOperation = 'lighter';

        // loop over each firework, draw it, update it
        var i = fireworks.length;
        while (i--) {
            fireworks[i].draw();
            fireworks[i].update(i);
        }

        // loop over each particle, draw it, update it
        var i = particles.length;
        while (i--) {
            particles[i].draw();
            particles[i].update(i);
        }

        // launch fireworks automatically to random coordinates, when the mouse isn't down
        if (timerTick >= timerTotal) {
            if (!mousedown) {
                // start the firework at the bottom middle of the screen, then set the random target coordinates, the random y coordinates will be set within the range of the top half of the screen
                fireworks.push(new Firework(cw / 2, ch, random(0, cw), random(0, ch / 2)));
                timerTick = 0;
            }
        } else {
            timerTick++;
        }

        // limit the rate at which fireworks get launched when mouse is down
        if (limiterTick >= limiterTotal) {
            if (mousedown) {
                // start the firework at the bottom middle of the screen, then set the current mouse coordinates as the target
                fireworks.push(new Firework(cw / 2, ch, mx, my));
                limiterTick = 0;
            }
        } else {
            limiterTick++;
        }
    }

    // mouse event bindings
    // update the mouse coordinates on mousemove
    canvas.addEventListener('mousemove', function (e) {
        mx = e.pageX - canvas.offsetLeft;
        my = e.pageY - canvas.offsetTop - 180;
    });

    // toggle mousedown state and prevent canvas from being selected
    canvas.addEventListener('mousedown', function (e) {
        e.preventDefault();
        mousedown = true;
    });

    canvas.addEventListener('mouseup', function (e) {
        e.preventDefault();
        mousedown = false;
    });

    // once the window loads, we are ready for some fireworks!
    window.onload = loop;
</script>